[user]
	name = Noah Magnolia 
	email = [email]
[alias]
	# Shortcuts
	a = add
	aa = add -A :/
	b = branch
	bd = branch -d 
	co = checkout
	s = status
	c = commit
	cc = commit -m
	cca = commit -a -m
	cam = commit --amend
	cob = checkout -b
	pusm = push --recurse-submodules=on-demand
	asm = submodule add
	l = log
	lt = log --after=12am
	m = merge 
	
	# Clone github repository at provided path
	# ex: "git clgh ntratcliff/gitignore"
	clgh = "!clgh() { git clone --recurse-submodules git@github.com:$1; }; clgh"
	
	# Clone gitlab repository at provided path
	# ex: "git clgl ntratcliff/gitignore"
	clgl = "!clgl() { git clone --recurse-submodules git@gitlab.com:$1; }; clgl"
	
	# Add remote/origin as a github repository at the provided path 
	# ex: "git raogh ntratcliff/gitignore"
	raogh = "!raogh() { git remote add origin git@github.com:$1; }; raogh"
	
	# Add the provided github repo as a submodule
	# ex: "git asmgh ntratcliff/gitignore"
	asmgh = "!asmgh() { git submodule add git@github.com:$1; }; asmgh"
	
	# Set up the current branch to track from origin/{branch}
	# replaces "git push -u origin {branch}" with "git pub"
	pub = "!pub() { br=$(git rev-parse --abbrev-ref HEAD); git push -u origin $br; }; pub"
	
	# Move a tag from one commit to another
	mvtag = "!move_tag() { git tag -d $1; git push remote :$1; git tag $1 $2; git push origin $1 }; move_tag"

	# typos
	psuh = "!psuh() { echo 'psuh dude ğŸ¤™'; git push; }; psuh"
	spuh = "!spuh() { echo 'spuh dude ğŸ¤™'; git push; }; spuh"
	ush = "!ush() { echo 'what would you do without yourself? ğŸ™„'; git push; }; ush"

	ignore = "!gi() { curl -sL https://www.toptal.com/developers/gitignore/api/$@ ;}; gi"
[push]
	default = simple
	recurseSubmodules = check
	followTags = true

[core]
	safecrlf = false
[status]
	submodulessummary = 1
[pager]
	branch = false
	log = false
	tag = false
	show = false
[init]
	defaultBranch = main
[advice]
	detachedHead = false
[submodule]
	recurse = true
[url "ssh://git@github.com/"]
	insteadOf = https://github.com/
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[pull]
	rebase = false
[adive]
	addEmptyPathspec = false
[log]
	date = relative
[format]
	pretty = format:%C(auto,yellow)%h %C(auto,blue)%>(12,trunc)%ad %C(auto,green)%<(7,trunc)%aN%C(auto)% gD% D %C(auto,reset)%s
